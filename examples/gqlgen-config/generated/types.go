// Code generated by TypeMUX. DO NOT EDIT.
package user

import (
	"time"
)

type UserRole int

const (
	UserRoleADMIN UserRole = iota
	UserRoleUSER
	UserRoleGUEST
)

type User struct {
	Id        string    `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	Role      UserRole  `json:"role"`
	CreatedAt time.Time `json:"createdAt"`
}

type GetUserRequest struct {
	Id string `json:"id"`
}

type CreateUserRequest struct {
	Username string   `json:"username"`
	Email    string   `json:"email"`
	Role     UserRole `json:"role"`
}

type UpdateUserRequest struct {
	Id       string `json:"id"`
	Username string `json:"username"`
	Email    string `json:"email"`
}

type ListUsersRequest struct {
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

type UserListResponse struct {
	Users []User `json:"users"`
	Total int32  `json:"total"`
}

type Empty struct {
}

type UserService interface {
	GetUser(input *GetUserRequest) (*User, error)
	ListUsers(input *ListUsersRequest) (*UserListResponse, error)
	CreateUser(input *CreateUserRequest) (*User, error)
	UpdateUser(input *UpdateUserRequest) (*User, error)
	DeleteUser(input *GetUserRequest) (*Empty, error)
}
