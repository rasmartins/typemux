// Code generated by TypeMUX. DO NOT EDIT.
package graphql

import (
	"time"
)

type UserStatus int

const (
	UserStatusACTIVE UserStatus = 0
	UserStatusINACTIVE UserStatus = 1
	UserStatusSUSPENDED UserStatus = 2
)

type User struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Status UserStatus `json:"status"`
}

type UserUpdate struct {
	User User `json:"user"`
	UpdateType string `json:"updateType"`
	Timestamp time.Time `json:"timestamp"`
}

type ChatMessage struct {
	Id string `json:"id"`
	UserId string `json:"userId"`
	Text string `json:"text"`
	Timestamp time.Time `json:"timestamp"`
}

type GraphQLService interface {
	GetUser(input *GetUserRequest) (*User, error)
	UserUpdates(input *UserUpdatesRequest, stream chan *UserUpdate) error
	NewMessages(input *NewMessagesRequest, stream chan *ChatMessage) error
	UserStatusChanged(input *Empty, stream chan *User) error
}

