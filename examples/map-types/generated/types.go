// Code generated by TypeMUX. DO NOT EDIT.
package maps

// Product information
type Product struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Price float64 `json:"price"`
	Description string `json:"description"`
}

// User profile
type User struct {
	Id string `json:"id"`
	Username string `json:"username"`
	Email string `json:"email"`
}

// Configuration settings
type Settings struct {
	Theme string `json:"theme"`
	Language string `json:"language"`
	Notifications bool `json:"notifications"`
}

// Inventory tracking with maps of custom types
type Inventory struct {
	// Map of warehouse ID to Product
Proto: map<string, Product>
GraphQL: [InventoryProductsEntry!]! with key/value fields
OpenAPI: object with Product values
	ProductsByWarehouse map[string]Product `json:"productsByWarehouse"`
	// Map of product ID to quantity (primitive value)
Proto: map<string, int32>
GraphQL: JSON scalar or [QuantityEntry!]!
OpenAPI: object with integer values
	Quantities map[string]int32 `json:"quantities"`
	// Map of supplier ID to list of products
Proto: map<string, ProductList> (requires wrapper)
GraphQL: [SupplierProductsEntry!]!
OpenAPI: object with array values
	SupplierProducts map[string] `json:"supplierProducts"`
}

// User preferences with various map types
type UserPreferences struct {
	UserId string `json:"userId"`
	// Map of feature name to Settings
	FeatureSettings map[string]Settings `json:"featureSettings"`
	// Map of friend ID to User profile
	Friends map[string]User `json:"friends"`
	// Simple key-value pairs (string to string)
	Metadata map[string]string `json:"metadata"`
}

// Shopping cart with product maps
type ShoppingCart struct {
	CartId string `json:"cartId"`
	UserId string `json:"userId"`
	// Map of product ID to Product details
	Items map[string]Product `json:"items"`
	// Map of product ID to quantity
	ItemQuantities map[string]int32 `json:"itemQuantities"`
	// Total price
	TotalPrice float64 `json:"totalPrice"`
}

// Request to get inventory
type GetInventoryRequest struct {
	WarehouseId string `json:"warehouseId"`
}

// Request to update cart
type UpdateCartRequest struct {
	CartId string `json:"cartId"`
	ProductId string `json:"productId"`
	Quantity int32 `json:"quantity"`
}

// Response with cart details
type CartResponse struct {
	Cart ShoppingCart `json:"cart"`
}

// Service demonstrating map operations
type InventoryService interface {
	// Get inventory for a warehouse
	GetInventory(input *GetInventoryRequest) (*Inventory, error)
	// Update shopping cart
	UpdateCart(input *UpdateCartRequest) (*CartResponse, error)
}

