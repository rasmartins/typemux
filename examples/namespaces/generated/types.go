// Code generated by TypeMUX. DO NOT EDIT.
package userservice

import (
	"time"
)

// User status enumeration
type UserStatus int

const (
	UserStatusACTIVE UserStatus = 1
	UserStatusINACTIVE UserStatus = 2
	UserStatusSUSPENDED UserStatus = 3
)

// User entity
type User struct {
	Id string `json:"id"`
	Username string `json:"username"`
	Email string `json:"email"`
	Status UserStatus `json:"status"`
	CreatedAt time.Time `json:"createdAt"`
}

type GetUserRequest struct {
	UserId string `json:"userId"`
}

type GetUserResponse struct {
	User User `json:"user"`
}

type CreateUserRequest struct {
	Username string `json:"username"`
	Email string `json:"email"`
}

type CreateUserResponse struct {
	User User `json:"user"`
	Success bool `json:"success"`
}

// User management service
type UserService interface {
	// Get a user by ID
	GetUser(input *GetUserRequest) (*GetUserResponse, error)
	// Create a new user
	CreateUser(input *CreateUserRequest) (*CreateUserResponse, error)
}

