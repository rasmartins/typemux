// Code generated by TypeMUX. DO NOT EDIT.
package optionals

import (
	"time"
)

// Example demonstrating optional field syntax
// Fields marked with ? are explicitly optional
// Fields marked with @required are required
// Fields without either are treated as optional by default
// User profile with a mix of required and optional fields
type UserProfile struct {
	// Unique identifier (always required)
	Id string `json:"id"`
	// Username (always required)
	Username string `json:"username"`
	// Email address (explicitly optional)
	Email string `json:"email,omitempty"`
	// Display name (optional, has default behavior)
	DisplayName string `json:"displayName"`
	// Bio text (explicitly optional)
	Bio string `json:"bio,omitempty"`
	// Age in years (explicitly optional)
	Age int32 `json:"age,omitempty"`
	// Profile picture URL (optional)
	AvatarUrl string `json:"avatarUrl,omitempty"`
	// User preferences (optional map)
	Preferences map[string]string `json:"preferences"`
	// List of tags (explicitly optional array)
	Tags []string `json:"tags,omitempty"`
	// Created timestamp (required)
	CreatedAt time.Time `json:"createdAt"`
	// Last login (explicitly optional)
	LastLoginAt *time.Time `json:"lastLoginAt,omitempty"`
}

// Product with pricing information
type Product struct {
	Id   string `json:"id"`
	Name string `json:"name"`
	// Optional description
	Description string `json:"description,omitempty"`
	// Price is required
	Price float64 `json:"price"`
	// Optional discount percentage
	DiscountPercent float32 `json:"discountPercent,omitempty"`
	// Optional stock quantity
	StockQuantity int32 `json:"stockQuantity,omitempty"`
}

type GetProfileRequest struct {
	UserId string `json:"userId"`
}

type UpdateProfileRequest struct {
	UserId      string `json:"userId"`
	Email       string `json:"email,omitempty"`
	DisplayName string `json:"displayName,omitempty"`
	Bio         string `json:"bio,omitempty"`
	AvatarUrl   string `json:"avatarUrl,omitempty"`
}

type UserService interface {
	// Get user profile by ID
	GetProfile(input *GetProfileRequest) (*UserProfile, error)
	// Update user profile
	UpdateProfile(input *UpdateProfileRequest) (*UserProfile, error)
}
