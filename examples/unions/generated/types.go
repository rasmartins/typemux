// Code generated by TypeMUX. DO NOT EDIT.
package api

import (
	"time"
)

// Example demonstrating union/oneOf types
type TextMessage struct {
	Content   string    `json:"content"`
	Timestamp time.Time `json:"timestamp"`
}

type ImageMessage struct {
	ImageUrl  string    `json:"imageUrl"`
	Thumbnail string    `json:"thumbnail"`
	Timestamp time.Time `json:"timestamp"`
}

type VideoMessage struct {
	VideoUrl  string    `json:"videoUrl"`
	Duration  int32     `json:"duration"`
	Thumbnail string    `json:"thumbnail"`
	Timestamp time.Time `json:"timestamp"`
}

type SendMessageRequest struct {
	ChatId  string  `json:"chatId"`
	Message Message `json:"message"`
}

type SendMessageResponse struct {
	MessageId string `json:"messageId"`
	Success   bool   `json:"success"`
}

type GetMessageRequest struct {
	MessageId string `json:"messageId"`
}

type GetMessageResponse struct {
	Message Message `json:"message"`
}

// A message can be text, image, or video
type Message interface {
	isMessage()
}

type MessageTextMessage struct {
	Value TextMessage `json:"value"`
}

func (MessageTextMessage) isMessage() {}

type MessageImageMessage struct {
	Value ImageMessage `json:"value"`
}

func (MessageImageMessage) isMessage() {}

type MessageVideoMessage struct {
	Value VideoMessage `json:"value"`
}

func (MessageVideoMessage) isMessage() {}

type MessageService interface {
	// Send a message (text, image, or video)
	SendMessage(input *SendMessageRequest) (*SendMessageResponse, error)
	// Get a message by ID
	GetMessage(input *GetMessageRequest) (*GetMessageResponse, error)
}
