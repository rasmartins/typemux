// Code generated by TypeMUX. DO NOT EDIT.
package userservice

import (
	"time"
)

type User struct {
	Id          string    `json:"id"`
	Username    string    `json:"username"`
	Email       string    `json:"email"`
	Age         int32     `json:"age"`
	FullName    string    `json:"fullName"`
	DisplayName string    `json:"displayName"`
	Website     string    `json:"website"`
	Balance     int64     `json:"balance"`
	CreatedAt   time.Time `json:"createdAt"`
	LastLogin   time.Time `json:"lastLogin"`
	IsActive    bool      `json:"isActive"`
	Tags        []string  `json:"tags"`
	LegacyEmail string    `json:"legacyEmail"`
}

type UserPreferences struct {
	UserId               string `json:"userId"`
	Theme                string `json:"theme"`
	Language             string `json:"language"`
	NotificationsEnabled bool   `json:"notificationsEnabled"`
}

type UserIdRequest struct {
	Id string `json:"id"`
}

type ListUsersRequest struct {
	PageSize  int32  `json:"pageSize"`
	PageToken string `json:"pageToken"`
}

type ListUsersResponse struct {
	Users         []User `json:"users"`
	NextPageToken string `json:"nextPageToken"`
}

type EmptyResponse struct {
}

type UserService interface {
	CreateUser(input *User) (*User, error)
	GetUser(input *UserIdRequest) (*User, error)
	UpdateUser(input *User) (*User, error)
	DeleteUser(input *UserIdRequest) (*EmptyResponse, error)
	ListUsers(input *ListUsersRequest) (*ListUsersResponse, error)
}
